---
import { Icon } from 'astro-icon/components'
const { navData, rightMenu } = Astro.props;
---

<script type="module">
  const bodyElement = document.querySelector('body');
  const menuButton = document.querySelector('#menuButton')
  const navHeader = document.querySelector('#odysseyNavHeader');
  const menuButtonIconHam = document.querySelector('#menuButtonIconHam');
  const menuButtonIconClose = document.querySelector('#menuButtonIconClose');
  let scrollPosition = 0;

  menuButton.addEventListener('click', toggleMenu)

  function toggleMenu() {
    menuButtonIconHam.toggleAttribute('hidden');
    menuButtonIconClose.toggleAttribute('hidden');
    
    if (navHeader.hasAttribute('mobile-menu-open', true)) {
      menuButton.title = "Open Main Menu"
      // unlock scroll position
      bodyElement.style.removeProperty('overflow');
      bodyElement.style.removeProperty('position');
      bodyElement.style.removeProperty('top');
      bodyElement.style.removeProperty('width');
      window.scrollTo(0, scrollPosition);
    } else {
      menuButton.title = "Close Main Menu"
      // lock scroll position
      scrollPosition = window.pageYOffset;
      bodyElement.style.overflow = 'hidden';
      bodyElement.style.position = 'fixed';
      bodyElement.style.top = `-${scrollPosition}px`;
      bodyElement.style.width = '100%';
    }
    
    navHeader.toggleAttribute('mobile-menu-open');
  }
</script>  

<header id="odysseyNavHeader" class={`${rightMenu ? "header--right" : ``.trim()}`}>
  <div class="header-logo-menu__container">
  <a class="header-logo__link" href="/">
    <slot name="logo">
    </slot>
  </a>
  <button id="menuButton" title="Open Main Menu">
    <span id="menuButtonIconHam">
      <Icon name="ic:baseline-menu" width="24px" height="24px" />
    </span>
    <span id="menuButtonIconClose" hidden>
      <Icon name="ic:baseline-close" width="24px" height="24px" />
    </span>
  </button>
  </div>
  <div class="header-nav__container">
    <slot name="nav">
      {navData && (
        <nav>
          <ul>
            {navData.map((navItem) => (
              <li>
                <a
                  href={navItem.slug}
                  class={`nav__link ${navItem.isCTA ? 'nav__link--cta' : ''}`.trim()}
                >
                  {navItem.title}
                </a>
              </li>
            ))}
          </ul>
        </nav>
      )}
    </slot>
  </div>
  <div class="header-action-item__container">
    <slot name="action-item">
    </slot>
  </div>
</header>

<style>
  header {
    width: 100%;
    padding: 1rem 0.5rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  header.header--right {
    display: grid;
    grid-template-columns: 1fr auto auto;
  }
  .header-logo__link {
    width: fit-content;
    color: inherit;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
  }
  .header-logo-menu__container {
    display: flex;
    align-items: center;
    z-index: 100;
  }
  .header-action-item__container {
    z-index: 100;
  }
  #menuButton {
    outline: none;
    border: none;
    background-color: transparent;
    display: none;
    cursor: pointer;
    -webkit-tap-highlight-color: transparent;
    align-items: center;
    justify-content: center;
    height: 2.75rem;
    width: 2.75rem;
    padding: 0;
  }
  #menuButton > span {
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--theme-on-bg);
  }
  #menuButton > span[hidden] {
    display: none !important;
  }
  nav {
    display: flex;
  }
  nav ul {
    margin: 0;
    padding: 0;
    list-style: none;
    display: flex;
    gap: 0.75rem;
  }
  nav ul li {
    display: flex;
  }
  .nav__link {
    text-decoration: none;
    color: inherit;
    opacity: 0.72;
    transition: opacity linear 150ms;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    font-weight: 500;
    padding: 0.25rem 0.35rem;
  }
  .nav__link:hover {
    opacity: 1;
  }
  .nav__link--cta {
    padding: 0.36rem 0.92rem;
    background-color: var(--theme-primary);
    color: var(--theme-on-primary);
    border-radius: var(--theme-button-border-radius);
    opacity: 1;
    transition: background-color var(--theme-transition, 150ms linear);
  }
  .nav__link--cta:hover {
    background-color: var(--theme-primary-hover);
  }
  @media(max-width: 600px) {
    header.header--right {
      display: flex;
    }
    #menuButton {
      display: flex;
      z-index: 100;
    }
    .header-logo-menu__container {
      width: 100%;
      justify-content: flex-start;
      gap: 0.75rem;
    }
    .header-logo__link {
      margin: 0;
    }
    #menuButton {
      margin-left: auto;
      position: static;
      right: auto;
      top: auto;
      transform: none;
      padding: 0.25rem;
    }
    .header-nav__container {
      width: 100%;
      height: 100%;
      background-color: var(--theme-bg);
      display: none;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      position: fixed;
      inset: 0;
      z-index: 99;
    }
    header[mobile-menu-open] .header-nav__container {
      display: flex;
    }
    header[mobile-menu-open] nav ul {
      align-items: center;
      flex-direction: column;
      gap: 1rem;
    }
    header[mobile-menu-open] nav ul li {
      font-size: var(--font-size-lg);
    }
    header[mobile-menu-open] .nav__link {
      opacity: 1;
      padding: 0.25rem 0.35rem;
    }
    header[mobile-menu-open] .nav__link--cta {
      width: min(18rem, 80vw);
      padding: 0.75rem 1.25rem;
      font-size: inherit;
    }
  }
</style>